########### default params
# output
filename_out <- "out.pdf"

# plot settings
max_temp <- 130
min_temp<-0
max_fraction_threshold <- 0 # if max fraction energy below value, graph not drawn
higher_temp_threshold <- 130
lower_temp_threshold <- 0
BRUSE_2014<-FALSE
SFINX_2012<-FALSE


######### debug
#infile <- "/Users/nimhd/CHIMNEY_SVEN/GWB/test_energy.txt"
#args=c()


## arguments
args <- commandArgs(TRUE)
if ("-i" %in% args){
	p<-which(args=="-i")	
	infile<-args[p+1]
}
if ("-o" %in% args){
	p<-which(args=="-o")	
	filename_out<-args[p+1]
}

if ("-mt" %in% args){
	p<-which(args=="-mt")	
	max_temp<-as.numeric(args[p+1])
}

if ("-t" %in% args){
	p<-which(args=="-t")	
	max_fraction_threshold<-as.numeric(args[p+1]) # if max fraction energy below value, graph not drawn
}

if ("-htt" %in% args){
	p<-which(args=="-htt")	
	higher_temp_threshold<-as.numeric(args[p+1])
}

if ("-ltt" %in% args){
	p<-which(args=="-ltt")	
	lower_temp_threshold<-as.numeric(args[p+1])
}

if ("-sfinx_2012" %in% args){
	SFINX_2012=TRUE
	}

if ("-bruse_2014" %in% args){
	BRUSE_2014=TRUE
	}
#### print params
print(infile)


#### functions

edit_table <- function(tble){


	## sort table
	tble<-tble[order(tble$V3, decreasing=T),]


	## add cols to table
	tble$temptotal <- rep(0,length(tble$V1))
	tble$temprelative <- rep(0,length(tble$V1))
	tble$check <- rep(0,length(tble$V1))
	
	## find number of unique reactions
	# Need because we have cated files with many outputs at eg 2C
	l <- length(unique(tble[,1])) 

	## create new table with correct colnames
	new_table <- read.table(text = "",
                 colClasses = c("character","numeric", "numeric", "numeric", "numeric"),
                 col.names = c("group", "temp","total_dG","gr_dG", "fraction"))

	## expand new table with total dG for each temp for first unique reactions.
	i <- 1
	for (temperature in unique(tble$V3)) {
		
		
		locdata <- tble[which(tble$V3==temperature),]
        	locdata <- locdata[1:l,]
		locsum <- sum(locdata$V6)
		locdata$temptotal <- locsum
		
		#### expand new table with rownames and summed up energy
		reactions <- as.vector(locdata$V1)
		
		# sulfide oxidation
		r1 <- locdata[grep('1H2S(aq)+2O2(aq)', reactions, fixed=T),]$V6
		r2 <- locdata[grep('1HS-+2O2(aq)', reactions, fixed=T),]$V6
		dG_tot <- r1+r2
		out <- c("Sulfide oxidation",temperature,locsum,dG_tot,-1)
		new_table[i,] <- out
		i<-i+1		

		# sulfide oxidation with nitrate
		r1 <- locdata[grep('10H2S(aq)+16NO3', reactions, fixed=T),]$V6
		r2 <- locdata[grep('10HS-+8H2O+16NO3', reactions, fixed=T),]$V6
		dG_tot <- r1+r2
		out <- c("Sulfide oxidation with nitrate",temperature,locsum,dG_tot,-1)
		new_table[i,] <- out
		i<-i+1


		# hydrogen oxidation
		r1 <- locdata[grep('H2(aq)+0.5O2(aq)', reactions, fixed=T),]$V6
		dG_tot <- r1
		out <- c("Hydrogen oxidation",temperature,locsum,dG_tot,-1)
		new_table[i,] <- out
		i<-i+1
		
		# methane oxidation
		r1 <- locdata[grep('Methane(aq)+2O2', reactions, fixed=T),]$V6
		dG_tot <- r1
		out <- c("Methane oxidation",temperature,locsum,dG_tot,-1)
		new_table[i,] <- out
		i<-i+1		

		# iron oxidation
		r1 <- locdata[grep('4Fe', reactions, fixed=T),]$V6
		dG_tot <- r1
		out <- c("Iron oxidation",temperature,locsum,dG_tot,-1)
		new_table[i,] <- out
		i<-i+1
		tags <- as.vector(unique(locdata[,1]))
		
		# sulfate reduction
		r1 <- locdata[grep('H2(aq)+1SO4', reactions, fixed=T),]$V6
		dG_tot <- r1
		out <- c("Sulfate reduction",temperature,locsum,dG_tot,-1)
		new_table[i,] <- out
		i<-i+1
		tags <- as.vector(unique(locdata[,1]))

		# anaerobic ox of methane
		r1 <- locdata[grep('CH4(aq)+S', reactions, fixed=T),]$V6
		dG_tot <- r1
		out <- c("Anaerobic oxidation of methane",temperature,locsum,dG_tot,-1)
		new_table[i,] <- out
		i<-i+1

		# ammonium oxidation
		r1 <- locdata[grep('NH4', reactions, fixed=T),]$V6
		dG_tot <- r1
		out <- c("Ammonium oxidation",temperature,locsum,dG_tot,-1)
		new_table[i,] <- out
		i<-i+1
		

		# methanogenesis
		r1 <- locdata[grep('4H2(aq)+CO2', reactions, fixed=T),]$V6
		r2 <- locdata[grep('4H2(aq)+HCO3', reactions, fixed=T),]$V6
		dG_tot <- r1 + r2
		out <- c("Methanogenesis",temperature,locsum,dG_tot,-1)
		new_table[i,] <- out
		i<-i+1
		

		# Hydrogen oxidation with nitrate
		r1 <- locdata[grep('5H2(aq)+2NO3-+2H+->N2(g)+6H2O', reactions, fixed=T),]$V6
		dG_tot <- r1
		out <- c("Hydrogen oxidation with nitrate",temperature,locsum,dG_tot,-1)
		new_table[i,] <- out
		i<-i+1
		
	}

	## make sure class is numbers
	for ( n in 2:5){
		new_table[,n] <- as.numeric(new_table[,n])
	}
	

	## fill in temprelative: amount of dG per temptotal for each reaction at each temperature
	new_table$fraction <- round(new_table$gr_dG/new_table$total_dG,4)

	## fix NaN in fraction resulting from total_dG = 0
	z <- which(new_table$total_dG==0)
	new_table$fraction[z] <- 0

	return(new_table)
}



## 1 - oct - 


####### main ###

## read and sort on temp
print ("Reading input")
mydata <-read.table(file=infile, header=F, sep="\t")

print ("Sorting input")
mydata <-mydata[order(mydata$V3, decreasing=T),]


## remove temperatures below threshold
#higher_temp_threshold <- 130
rempos <- which(mydata$V3 > higher_temp_threshold)
if (length(rempos > 0)){
	mydata <- mydata[-rempos,]
}

## remove low temperatures
#lower_temp_threshold <- 2.4
rempos <- which(mydata$V3 < lower_temp_threshold)
if (length(rempos > 0)){
	mydata <- mydata[-rempos,]
}


##keep copy of mydata
mydata.cp <- mydata

## convert to groups
mydata <- edit_table(mydata)

## remove unwanted
if (BRUSE_2014 | SFINX_2012){
	print("TESTING")
	rem <- c("^Hydrogen oxidatio", "^Iron oxidation", "^Sulfate reduction","^Ammonium oxidation", "^Methanogenesis")
	for (n in rem){
		mydata <- mydata[-grep(n, mydata$group),]
	}
}


## convert from J to kJ
mydata$total_dG <- mydata$total_dG/1000
mydata$gr_dG <- mydata$gr_dG/1000

#### get groups
groups <- as.vector(unique(mydata$group))
gr_len <- length(groups)

## define plot settings
min_dG <- min(mydata$gr_dG)
legend_ys <- (1:gr_len/gr_len)*(min_dG)
cols=rainbow(gr_len)


pch<-1:gr_len
cl<-1.3 # cex.lab
ca<-1.0 # cex.axes
parmar2<-4.2 # left margin
lw <- 2 # linewidth
lt <- c(1,1,1) # linetype for each plot
ylab<- "Total energy ( kJ / kg vent fluid )"
m<-"ENERGY"

## make empty plot
pdf(filename_out)
par(mar=c(1,parmar2,5,.2))

plot(1,xlim=c(min_temp,max_temp), ylim=c(0,min_dG), ylab=ylab, xlab="", type='n', main=m, cex.lab=cl,cex.axis=ca, mgp=c(2,.5,0))
if (SFINX_2012){
	axis(1, at=c(0,20,40), label=F, tick=T, mgp=c(2,.5,0), cex.axis=ca)
}
if (BRUSE_2014){
	axis(1, at=c(0,20,40,60,80,100,120), label=F, tick=T, mgp=c(2,.5,0), cex.axis=ca)
}

#### indicating mixing on 3d axis
if (SFINX_2012){
axis(3, at=c(2.0,2.1, 2.9, 6.7, 11.0,18), tick=T, labels=c(5000,400,50,10, 5,3), mgp=c(2,.5,0), cex.axis=ca, srt=90)
}
if (BRUSE_2014){
	axis(3, at=c(2.0,2.6, 6.5, 25.0, 48.0,77.9), tick=T, labels=c(5000,400,50,10, 5,3), mgp=c(2,.5,0), cex.axis=ca, srt=90)
}

## draw dG lines of (selected) reactions
i<-0
for (group in groups) {
	i<-i+1
	group_data <- mydata[which(mydata$group==group),]
	max_fraction <- max(group_data$fraction)
	
	if (max_fraction >=  max_fraction_threshold){
		lines(group_data$temp,group_data$gr_dG,col=cols[i], lwd=lw)

	
		########## legend
		text(80,legend_ys[i],group, cex=.8,pos=4)
		lines(c(70,75),rep(legend_ys[i],2),col=cols[i], lwd=lw)
	}	
}

dev.off()
